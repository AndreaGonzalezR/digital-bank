{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\ABS 120\\\\digital-bank\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\ABS 120\\\\digital-bank\",\"filename\":\"C:\\\\Users\\\\ABS 120\\\\digital-bank\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\ABS 120\\\\digital-bank\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\ABS 120\\digital-bank\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\ABS 120\\digital-bank",
      "filename": "C:\\Users\\ABS 120\\digital-bank\\wdio.conf.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "C:\\Users\\ABS 120\\digital-bank",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ABS 120\\digital-bank\\wdio.conf.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ABS 120\\digital-bank\\wdio.conf.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ABS 120\\digital-bank\\",
        "sourceFileName": "wdio.conf.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./tests/**/*.js'],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 5,\n    //\n    browserName: 'chrome',\n    acceptInsecureCerts: true // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost:8080/bank/login/',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['chromedriver'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec', ['allure', {\n    outputDir: 'allure-results'\n  }]],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialised\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {String} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {Object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {Object}  test             test object\n   * @param {Object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {Any}     result.result    return object of test function\n   * @param {Number}  result.duration  duration of test\n   * @param {Boolean} result.passed    true if test has passed, otherwise false\n   * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  afterTest: async function (test, context, {\n    error,\n    result,\n    duration,\n    passed,\n    retries\n  }) {\n    if (!passed) {\n      await browser.takeScreenshot();\n    }\n  }\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {Object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  //onReload: function(oldSessionId, newSessionId) {\n  //}\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "wdio.conf.js"
      ],
      "names": [
        "exports",
        "config",
        "specs",
        "exclude",
        "maxInstances",
        "capabilities",
        "browserName",
        "acceptInsecureCerts",
        "logLevel",
        "bail",
        "baseUrl",
        "waitforTimeout",
        "connectionRetryTimeout",
        "connectionRetryCount",
        "services",
        "framework",
        "reporters",
        "outputDir",
        "mochaOpts",
        "ui",
        "timeout",
        "afterTest",
        "test",
        "context",
        "error",
        "result",
        "duration",
        "passed",
        "retries",
        "browser",
        "takeScreenshot"
      ],
      "mappings": ";;AAAAA,OAAO,CAACC,MAAR,GAAiB;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,KAAK,EAAE,CACH,iBADG,CAtBM;AAyBb;AACAC,EAAAA,OAAO,EAAE,CACL;AADK,GA1BI;AA6Bb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,EA7CD;AA8Cb;AACA;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,CAAC;AAEX;AACA;AACA;AACAD,IAAAA,YAAY,EAAE,CALH;AAMX;AACAE,IAAAA,WAAW,EAAE,QAPF;AAQXC,IAAAA,mBAAmB,EAAE,IARV,CASX;AACA;AACA;AACA;;AAZW,GAAD,CAnDD;AAkEb;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,MAzEG;AA0Eb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,IAAI,EAAE,CA3FO;AA4Fb;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,EAAE,mCAjGI;AAkGb;AACA;AACAC,EAAAA,cAAc,EAAE,KApGH;AAqGb;AACA;AACA;AACAC,EAAAA,sBAAsB,EAAE,MAxGX;AAyGb;AACA;AACAC,EAAAA,oBAAoB,EAAE,CA3GT;AA4Gb;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,CAAC,cAAD,CAjHG;AAmHb;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE,OAzHE;AA0Hb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAQ,CAAC,QAAD,EAAW;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAAX,CAAR,CAvIE;AA2Ib;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,EAAE,EAAE,KADG;AAEPC,IAAAA,OAAO,EAAE;AAFF,GA9IE;AAkJb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,SAAS,EAAE,gBAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,MAA3B;AAAmCC,IAAAA;AAAnC,GAA9B,EAA4E;AACnF,QAAI,CAACD,MAAL,EAAa;AACT,YAAME,OAAO,CAACC,cAAR,EAAN;AACH;AACJ;AAGD;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AA9Ra,CAAjB",
      "sourceRoot": "C:\\Users\\ABS 120\\digital-bank\\",
      "sourcesContent": [
        "exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    //\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './tests/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n    \n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 5,\n        //\n        browserName: 'chrome',\n        acceptInsecureCerts: true\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n        \n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost:8080/bank/login/',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['chromedriver'],\n    \n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec',['allure', {outputDir: 'allure-results'}]],\n\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialised\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {String} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {Object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {Object}  test             test object\n     * @param {Object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {Any}     result.result    return object of test function\n     * @param {Number}  result.duration  duration of test\n     * @param {Boolean} result.passed    true if test has passed, otherwise false\n     * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    afterTest: async function(test, context, { error, result, duration, passed, retries }) {\n        if (!passed) {\n            await browser.takeScreenshot();\n        }\n    },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {Object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    //onReload: function(oldSessionId, newSessionId) {\n    //}\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1639747284783
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\ABS 120\\\\digital-bank\\\\tests\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\ABS 120\\\\digital-bank\",\"filename\":\"C:\\\\Users\\\\ABS 120\\\\digital-bank\\\\tests\\\\testlogin.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\ABS 120\\\\digital-bank\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\ABS 120\\digital-bank\\tests\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\ABS 120\\digital-bank",
      "filename": "C:\\Users\\ABS 120\\digital-bank\\tests\\testlogin.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "C:\\Users\\ABS 120\\digital-bank",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ABS 120\\digital-bank\\tests\\testlogin.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ABS 120\\digital-bank\\tests\\testlogin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ABS 120\\digital-bank\\tests\\",
        "sourceFileName": "testlogin.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\ndescribe('TestLogin', () => {\n  it('Probar con username y password correctos', async () => {\n    await browser.url('');\n    let username = await $('[id = \"username\"]');\n    await username.setValue('jsmith@demo.io');\n    let password = await $('[id = \"password\"]');\n    await password.setValue('Demo123!');\n    let submit = await $('[id = \"submit\"]');\n    await submit.click();\n    await browser.url('http://localhost:8080/bank/home');\n    await browser.pause(5000);\n  });\n  it('Probar con username incorrecto y password correcto', async () => {\n    await browser.url('');\n    let username = await $('[id = \"username\"]');\n    await username.setValue('andrea@demo.io');\n    let password = await $('[id = \"password\"]');\n    await password.setValue('Demo123!');\n    let submit = await $('[id = \"submit\"]');\n    await submit.click();\n    await browser.pause(5000);\n  });\n  it('Probar con username correcto y password incorrecto', async () => {\n    await browser.url('');\n    let username = await $('[id = \"username\"]');\n    await username.setValue('jsmith@demo.io');\n    let password = await $('[id = \"password\"]');\n    await password.setValue('Abc');\n    let submit = await $('[id = \"submit\"]');\n    await submit.click();\n    await browser.pause(5000);\n  });\n  it('Probar credenciales correctas y seleccionar checkbox de Remember me', async () => {\n    await browser.url('');\n    let username = await $('[id = \"username\"]');\n    await username.setValue('jsmith@demo.io');\n    let password = await $('[id = \"password\"]');\n    await password.setValue('Demo123!');\n    let elemento = await $('[id = \"remember-me\"]');\n    await elemento.click();\n    await browser.pause(5000);\n    let submit = await $('[id = \"submit\"]');\n    await submit.click();\n    await browser.url('http://localhost:8080/bank/home');\n    await browser.pause(5000);\n  });\n  /*it ('Probar Mensaje de error al ingresar un username incorrecto', async () => {\r\n        await browser.url('');\r\n  \r\n  });*/\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Rsb2dpbi5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiYnJvd3NlciIsInVybCIsInVzZXJuYW1lIiwiJCIsInNldFZhbHVlIiwicGFzc3dvcmQiLCJzdWJtaXQiLCJjbGljayIsInBhdXNlIiwiZWxlbWVudG8iXSwibWFwcGluZ3MiOiI7O0FBQUFBLFFBQVEsQ0FBRSxXQUFGLEVBQWUsTUFBTTtBQUV6QkMsRUFBQUEsRUFBRSxDQUFDLDBDQUFELEVBQTZDLFlBQVk7QUFFdkQsVUFBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksRUFBWixDQUFOO0FBRUEsUUFBSUMsUUFBUSxHQUFHLE1BQU1DLENBQUMsQ0FBQyxtQkFBRCxDQUF0QjtBQUVBLFVBQU1ELFFBQVEsQ0FBQ0UsUUFBVCxDQUFrQixnQkFBbEIsQ0FBTjtBQUlBLFFBQUlDLFFBQVEsR0FBRyxNQUFNRixDQUFDLENBQUMsbUJBQUQsQ0FBdEI7QUFFQSxVQUFNRSxRQUFRLENBQUNELFFBQVQsQ0FBa0IsVUFBbEIsQ0FBTjtBQUlBLFFBQUlFLE1BQU0sR0FBRyxNQUFNSCxDQUFDLENBQUMsaUJBQUQsQ0FBcEI7QUFDQSxVQUFNRyxNQUFNLENBQUNDLEtBQVAsRUFBTjtBQUNBLFVBQU1QLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlDQUFaLENBQU47QUFFQSxVQUFNRCxPQUFPLENBQUNRLEtBQVIsQ0FBYyxJQUFkLENBQU47QUFFSCxHQXRCQyxDQUFGO0FBd0JBVCxFQUFBQSxFQUFFLENBQUUsb0RBQUYsRUFBd0QsWUFBWTtBQUVsRSxVQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxFQUFaLENBQU47QUFFQSxRQUFJQyxRQUFRLEdBQUcsTUFBTUMsQ0FBQyxDQUFDLG1CQUFELENBQXRCO0FBRUEsVUFBTUQsUUFBUSxDQUFDRSxRQUFULENBQWtCLGdCQUFsQixDQUFOO0FBSUEsUUFBSUMsUUFBUSxHQUFHLE1BQU1GLENBQUMsQ0FBQyxtQkFBRCxDQUF0QjtBQUVBLFVBQU1FLFFBQVEsQ0FBQ0QsUUFBVCxDQUFrQixVQUFsQixDQUFOO0FBSUEsUUFBSUUsTUFBTSxHQUFHLE1BQU1ILENBQUMsQ0FBQyxpQkFBRCxDQUFwQjtBQUNBLFVBQU1HLE1BQU0sQ0FBQ0MsS0FBUCxFQUFOO0FBR0EsVUFBTVAsT0FBTyxDQUFDUSxLQUFSLENBQWMsSUFBZCxDQUFOO0FBRUgsR0F0QkMsQ0FBRjtBQXdCQVQsRUFBQUEsRUFBRSxDQUFFLG9EQUFGLEVBQXdELFlBQVk7QUFFbEUsVUFBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksRUFBWixDQUFOO0FBRUEsUUFBSUMsUUFBUSxHQUFHLE1BQU1DLENBQUMsQ0FBQyxtQkFBRCxDQUF0QjtBQUVBLFVBQU1ELFFBQVEsQ0FBQ0UsUUFBVCxDQUFrQixnQkFBbEIsQ0FBTjtBQUlBLFFBQUlDLFFBQVEsR0FBRyxNQUFNRixDQUFDLENBQUMsbUJBQUQsQ0FBdEI7QUFFQSxVQUFNRSxRQUFRLENBQUNELFFBQVQsQ0FBa0IsS0FBbEIsQ0FBTjtBQUlBLFFBQUlFLE1BQU0sR0FBRyxNQUFNSCxDQUFDLENBQUMsaUJBQUQsQ0FBcEI7QUFDQSxVQUFNRyxNQUFNLENBQUNDLEtBQVAsRUFBTjtBQUdBLFVBQU1QLE9BQU8sQ0FBQ1EsS0FBUixDQUFjLElBQWQsQ0FBTjtBQUVILEdBdEJDLENBQUY7QUF3QkFULEVBQUFBLEVBQUUsQ0FBQyxxRUFBRCxFQUF3RSxZQUFZO0FBRWxGLFVBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEVBQVosQ0FBTjtBQUNBLFFBQUlDLFFBQVEsR0FBRyxNQUFNQyxDQUFDLENBQUMsbUJBQUQsQ0FBdEI7QUFFQSxVQUFNRCxRQUFRLENBQUNFLFFBQVQsQ0FBa0IsZ0JBQWxCLENBQU47QUFHQSxRQUFJQyxRQUFRLEdBQUcsTUFBTUYsQ0FBQyxDQUFDLG1CQUFELENBQXRCO0FBRUEsVUFBTUUsUUFBUSxDQUFDRCxRQUFULENBQWtCLFVBQWxCLENBQU47QUFHQSxRQUFJSyxRQUFRLEdBQUcsTUFBTU4sQ0FBQyxDQUFDLHNCQUFELENBQXRCO0FBQ0EsVUFBTU0sUUFBUSxDQUFDRixLQUFULEVBQU47QUFFQSxVQUFNUCxPQUFPLENBQUNRLEtBQVIsQ0FBYyxJQUFkLENBQU47QUFFQSxRQUFJRixNQUFNLEdBQUcsTUFBTUgsQ0FBQyxDQUFDLGlCQUFELENBQXBCO0FBQ0EsVUFBTUcsTUFBTSxDQUFDQyxLQUFQLEVBQU47QUFJQSxVQUFNUCxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQ0FBWixDQUFOO0FBRUEsVUFBTUQsT0FBTyxDQUFDUSxLQUFSLENBQWMsSUFBZCxDQUFOO0FBQ0gsR0ExQkMsQ0FBRjtBQTRCQTtBQUNKO0FBQ0E7QUFDQTtBQU1DLENBL0dPLENBQVIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBQlMgMTIwXFxkaWdpdGFsLWJhbmtcXHRlc3RzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJkZXNjcmliZSAoJ1Rlc3RMb2dpbicsICgpID0+IHtcclxuXHJcbiAgICBpdCgnUHJvYmFyIGNvbiB1c2VybmFtZSB5IHBhc3N3b3JkIGNvcnJlY3RvcycsIGFzeW5jICgpID0+IHtcclxuXHJcbiAgICAgICAgYXdhaXQgYnJvd3Nlci51cmwoJycpO1xyXG5cclxuICAgICAgICBsZXQgdXNlcm5hbWUgPSBhd2FpdCAkKCdbaWQgPSBcInVzZXJuYW1lXCJdJyk7XHJcblxyXG4gICAgICAgIGF3YWl0IHVzZXJuYW1lLnNldFZhbHVlKCdqc21pdGhAZGVtby5pbycpO1xyXG5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgbGV0IHBhc3N3b3JkID0gYXdhaXQgJCgnW2lkID0gXCJwYXNzd29yZFwiXScpO1xyXG5cclxuICAgICAgICBhd2FpdCBwYXNzd29yZC5zZXRWYWx1ZSgnRGVtbzEyMyEnKTtcclxuXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGxldCBzdWJtaXQgPSBhd2FpdCAkKCdbaWQgPSBcInN1Ym1pdFwiXScpO1xyXG4gICAgICAgIGF3YWl0IHN1Ym1pdC5jbGljaygpO1xyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwOi8vbG9jYWxob3N0OjgwODAvYmFuay9ob21lJyk7XHJcblxyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoNTAwMCk7XHJcblxyXG4gICAgfSk7XHJcblxyXG4gICAgaXQgKCdQcm9iYXIgY29uIHVzZXJuYW1lIGluY29ycmVjdG8geSBwYXNzd29yZCBjb3JyZWN0bycsIGFzeW5jICgpID0+IHtcclxuXHJcbiAgICAgICAgYXdhaXQgYnJvd3Nlci51cmwoJycpO1xyXG5cclxuICAgICAgICBsZXQgdXNlcm5hbWUgPSBhd2FpdCAkKCdbaWQgPSBcInVzZXJuYW1lXCJdJyk7XHJcblxyXG4gICAgICAgIGF3YWl0IHVzZXJuYW1lLnNldFZhbHVlKCdhbmRyZWFAZGVtby5pbycpO1xyXG5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgbGV0IHBhc3N3b3JkID0gYXdhaXQgJCgnW2lkID0gXCJwYXNzd29yZFwiXScpO1xyXG5cclxuICAgICAgICBhd2FpdCBwYXNzd29yZC5zZXRWYWx1ZSgnRGVtbzEyMyEnKTtcclxuXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGxldCBzdWJtaXQgPSBhd2FpdCAkKCdbaWQgPSBcInN1Ym1pdFwiXScpO1xyXG4gICAgICAgIGF3YWl0IHN1Ym1pdC5jbGljaygpO1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBhd2FpdCBicm93c2VyLnBhdXNlKDUwMDApO1xyXG5cclxuICAgIH0pO1xyXG5cclxuICAgIGl0ICgnUHJvYmFyIGNvbiB1c2VybmFtZSBjb3JyZWN0byB5IHBhc3N3b3JkIGluY29ycmVjdG8nLCBhc3luYyAoKSA9PiB7XHJcblxyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIudXJsKCcnKTtcclxuXHJcbiAgICAgICAgbGV0IHVzZXJuYW1lID0gYXdhaXQgJCgnW2lkID0gXCJ1c2VybmFtZVwiXScpO1xyXG5cclxuICAgICAgICBhd2FpdCB1c2VybmFtZS5zZXRWYWx1ZSgnanNtaXRoQGRlbW8uaW8nKTtcclxuXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGxldCBwYXNzd29yZCA9IGF3YWl0ICQoJ1tpZCA9IFwicGFzc3dvcmRcIl0nKTtcclxuXHJcbiAgICAgICAgYXdhaXQgcGFzc3dvcmQuc2V0VmFsdWUoJ0FiYycpO1xyXG5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgbGV0IHN1Ym1pdCA9IGF3YWl0ICQoJ1tpZCA9IFwic3VibWl0XCJdJyk7XHJcbiAgICAgICAgYXdhaXQgc3VibWl0LmNsaWNrKCk7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoNTAwMCk7XHJcblxyXG4gICAgfSk7XHJcblxyXG4gICAgaXQoJ1Byb2JhciBjcmVkZW5jaWFsZXMgY29ycmVjdGFzIHkgc2VsZWNjaW9uYXIgY2hlY2tib3ggZGUgUmVtZW1iZXIgbWUnLCBhc3luYyAoKSA9PiB7XHJcblxyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIudXJsKCcnKTtcclxuICAgICAgICBsZXQgdXNlcm5hbWUgPSBhd2FpdCAkKCdbaWQgPSBcInVzZXJuYW1lXCJdJyk7XHJcblxyXG4gICAgICAgIGF3YWl0IHVzZXJuYW1lLnNldFZhbHVlKCdqc21pdGhAZGVtby5pbycpO1xyXG5cclxuICAgICAgICBcclxuICAgICAgICBsZXQgcGFzc3dvcmQgPSBhd2FpdCAkKCdbaWQgPSBcInBhc3N3b3JkXCJdJyk7XHJcblxyXG4gICAgICAgIGF3YWl0IHBhc3N3b3JkLnNldFZhbHVlKCdEZW1vMTIzIScpO1xyXG5cclxuXHJcbiAgICAgICAgbGV0IGVsZW1lbnRvID0gYXdhaXQgJCgnW2lkID0gXCJyZW1lbWJlci1tZVwiXScpO1xyXG4gICAgICAgIGF3YWl0IGVsZW1lbnRvLmNsaWNrKCk7XHJcblxyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoNTAwMCk7XHJcblxyXG4gICAgICAgIGxldCBzdWJtaXQgPSBhd2FpdCAkKCdbaWQgPSBcInN1Ym1pdFwiXScpO1xyXG4gICAgICAgIGF3YWl0IHN1Ym1pdC5jbGljaygpO1xyXG5cclxuXHJcblxyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwOi8vbG9jYWxob3N0OjgwODAvYmFuay9ob21lJyk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYXdhaXQgYnJvd3Nlci5wYXVzZSg1MDAwKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qaXQgKCdQcm9iYXIgTWVuc2FqZSBkZSBlcnJvciBhbCBpbmdyZXNhciB1biB1c2VybmFtZSBpbmNvcnJlY3RvJywgYXN5bmMgKCkgPT4ge1xyXG5cclxuICAgICAgICBhd2FpdCBicm93c2VyLnVybCgnJyk7XHJcblxyXG5cclxuXHJcbiAgICB9KTsqL1xyXG4gICBcclxuXHJcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "testlogin.js"
      ],
      "names": [
        "describe",
        "it",
        "browser",
        "url",
        "username",
        "$",
        "setValue",
        "password",
        "submit",
        "click",
        "pause",
        "elemento"
      ],
      "mappings": ";;AAAAA,QAAQ,CAAE,WAAF,EAAe,MAAM;AAEzBC,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAY;AAEvD,UAAMC,OAAO,CAACC,GAAR,CAAY,EAAZ,CAAN;AAEA,QAAIC,QAAQ,GAAG,MAAMC,CAAC,CAAC,mBAAD,CAAtB;AAEA,UAAMD,QAAQ,CAACE,QAAT,CAAkB,gBAAlB,CAAN;AAIA,QAAIC,QAAQ,GAAG,MAAMF,CAAC,CAAC,mBAAD,CAAtB;AAEA,UAAME,QAAQ,CAACD,QAAT,CAAkB,UAAlB,CAAN;AAIA,QAAIE,MAAM,GAAG,MAAMH,CAAC,CAAC,iBAAD,CAApB;AACA,UAAMG,MAAM,CAACC,KAAP,EAAN;AACA,UAAMP,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAAN;AAEA,UAAMD,OAAO,CAACQ,KAAR,CAAc,IAAd,CAAN;AAEH,GAtBC,CAAF;AAwBAT,EAAAA,EAAE,CAAE,oDAAF,EAAwD,YAAY;AAElE,UAAMC,OAAO,CAACC,GAAR,CAAY,EAAZ,CAAN;AAEA,QAAIC,QAAQ,GAAG,MAAMC,CAAC,CAAC,mBAAD,CAAtB;AAEA,UAAMD,QAAQ,CAACE,QAAT,CAAkB,gBAAlB,CAAN;AAIA,QAAIC,QAAQ,GAAG,MAAMF,CAAC,CAAC,mBAAD,CAAtB;AAEA,UAAME,QAAQ,CAACD,QAAT,CAAkB,UAAlB,CAAN;AAIA,QAAIE,MAAM,GAAG,MAAMH,CAAC,CAAC,iBAAD,CAApB;AACA,UAAMG,MAAM,CAACC,KAAP,EAAN;AAGA,UAAMP,OAAO,CAACQ,KAAR,CAAc,IAAd,CAAN;AAEH,GAtBC,CAAF;AAwBAT,EAAAA,EAAE,CAAE,oDAAF,EAAwD,YAAY;AAElE,UAAMC,OAAO,CAACC,GAAR,CAAY,EAAZ,CAAN;AAEA,QAAIC,QAAQ,GAAG,MAAMC,CAAC,CAAC,mBAAD,CAAtB;AAEA,UAAMD,QAAQ,CAACE,QAAT,CAAkB,gBAAlB,CAAN;AAIA,QAAIC,QAAQ,GAAG,MAAMF,CAAC,CAAC,mBAAD,CAAtB;AAEA,UAAME,QAAQ,CAACD,QAAT,CAAkB,KAAlB,CAAN;AAIA,QAAIE,MAAM,GAAG,MAAMH,CAAC,CAAC,iBAAD,CAApB;AACA,UAAMG,MAAM,CAACC,KAAP,EAAN;AAGA,UAAMP,OAAO,CAACQ,KAAR,CAAc,IAAd,CAAN;AAEH,GAtBC,CAAF;AAwBAT,EAAAA,EAAE,CAAC,qEAAD,EAAwE,YAAY;AAElF,UAAMC,OAAO,CAACC,GAAR,CAAY,EAAZ,CAAN;AACA,QAAIC,QAAQ,GAAG,MAAMC,CAAC,CAAC,mBAAD,CAAtB;AAEA,UAAMD,QAAQ,CAACE,QAAT,CAAkB,gBAAlB,CAAN;AAGA,QAAIC,QAAQ,GAAG,MAAMF,CAAC,CAAC,mBAAD,CAAtB;AAEA,UAAME,QAAQ,CAACD,QAAT,CAAkB,UAAlB,CAAN;AAGA,QAAIK,QAAQ,GAAG,MAAMN,CAAC,CAAC,sBAAD,CAAtB;AACA,UAAMM,QAAQ,CAACF,KAAT,EAAN;AAEA,UAAMP,OAAO,CAACQ,KAAR,CAAc,IAAd,CAAN;AAEA,QAAIF,MAAM,GAAG,MAAMH,CAAC,CAAC,iBAAD,CAApB;AACA,UAAMG,MAAM,CAACC,KAAP,EAAN;AAIA,UAAMP,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAAN;AAEA,UAAMD,OAAO,CAACQ,KAAR,CAAc,IAAd,CAAN;AACH,GA1BC,CAAF;AA4BA;AACJ;AACA;AACA;AAMC,CA/GO,CAAR",
      "sourceRoot": "C:\\Users\\ABS 120\\digital-bank\\tests\\",
      "sourcesContent": [
        "describe ('TestLogin', () => {\r\n\r\n    it('Probar con username y password correctos', async () => {\r\n\r\n        await browser.url('');\r\n\r\n        let username = await $('[id = \"username\"]');\r\n\r\n        await username.setValue('jsmith@demo.io');\r\n\r\n        \r\n\r\n        let password = await $('[id = \"password\"]');\r\n\r\n        await password.setValue('Demo123!');\r\n\r\n        \r\n\r\n        let submit = await $('[id = \"submit\"]');\r\n        await submit.click();\r\n        await browser.url('http://localhost:8080/bank/home');\r\n\r\n        await browser.pause(5000);\r\n\r\n    });\r\n\r\n    it ('Probar con username incorrecto y password correcto', async () => {\r\n\r\n        await browser.url('');\r\n\r\n        let username = await $('[id = \"username\"]');\r\n\r\n        await username.setValue('andrea@demo.io');\r\n\r\n        \r\n\r\n        let password = await $('[id = \"password\"]');\r\n\r\n        await password.setValue('Demo123!');\r\n\r\n        \r\n\r\n        let submit = await $('[id = \"submit\"]');\r\n        await submit.click();\r\n        \r\n\r\n        await browser.pause(5000);\r\n\r\n    });\r\n\r\n    it ('Probar con username correcto y password incorrecto', async () => {\r\n\r\n        await browser.url('');\r\n\r\n        let username = await $('[id = \"username\"]');\r\n\r\n        await username.setValue('jsmith@demo.io');\r\n\r\n        \r\n\r\n        let password = await $('[id = \"password\"]');\r\n\r\n        await password.setValue('Abc');\r\n\r\n        \r\n\r\n        let submit = await $('[id = \"submit\"]');\r\n        await submit.click();\r\n        \r\n\r\n        await browser.pause(5000);\r\n\r\n    });\r\n\r\n    it('Probar credenciales correctas y seleccionar checkbox de Remember me', async () => {\r\n\r\n        await browser.url('');\r\n        let username = await $('[id = \"username\"]');\r\n\r\n        await username.setValue('jsmith@demo.io');\r\n\r\n        \r\n        let password = await $('[id = \"password\"]');\r\n\r\n        await password.setValue('Demo123!');\r\n\r\n\r\n        let elemento = await $('[id = \"remember-me\"]');\r\n        await elemento.click();\r\n\r\n        await browser.pause(5000);\r\n\r\n        let submit = await $('[id = \"submit\"]');\r\n        await submit.click();\r\n\r\n\r\n\r\n        await browser.url('http://localhost:8080/bank/home');\r\n        \r\n        await browser.pause(5000);\r\n    });\r\n\r\n    /*it ('Probar Mensaje de error al ingresar un username incorrecto', async () => {\r\n\r\n        await browser.url('');\r\n\r\n\r\n\r\n    });*/\r\n   \r\n\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1639773074360
  }
}